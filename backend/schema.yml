openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/categories/:
    get:
      operationId: api_categories_list
      description: List categories with unified response envelope
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: string
        description: Filter by parent category slug
      - in: query
        name: search
        schema:
          type: string
        description: Search in name and description
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/categories/{slug}/:
    get:
      operationId: api_categories_retrieve
      description: Category management with optimized queries and unified responses
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/certificates/:
    get:
      operationId: api_certificates_list
      description: Certificate management with schema compatibility
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'
          description: ''
  /api/certificates/{id}/:
    get:
      operationId: api_certificates_retrieve
      description: Certificate management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Certificate.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
  /api/certificates/verify/{certificate_number}/:
    get:
      operationId: api_certificates_verify_retrieve
      description: Verify certificate by number with constant-time response
      parameters:
      - in: path
        name: certificate_number
        schema:
          type: string
        description: Certificate number to verify
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Certificate verification result
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid certificate number format
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Certificate not found
          description: ''
  /api/courses/:
    get:
      operationId: api_courses_list
      description: List courses with unified response envelope
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: instructor
        schema:
          type: string
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: level
        schema:
          type: string
      - in: query
        name: max_price
        schema:
          type: string
      - in: query
        name: min_price
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: api_courses_create
      description: Course management with all critical issues fixed
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{course_slug}/enrollment/:
    post:
      operationId: api_courses_enrollment_create
      description: Enroll user in course by slug
      parameters:
      - in: path
        name: course_slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Course not found
          description: ''
  /api/courses/{course_slug}/progress/:
    get:
      operationId: api_courses_progress_retrieve
      description: Get user's progress in a specific course
      parameters:
      - in: path
        name: course_slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Course progress data
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Course or enrollment not found
          description: ''
  /api/courses/{slug}/:
    get:
      operationId: api_courses_retrieve
      description: Course management with all critical issues fixed
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    put:
      operationId: api_courses_update
      description: Course management with all critical issues fixed
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_courses_partial_update
      description: Course management with all critical issues fixed
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_courses_destroy
      description: Course management with all critical issues fixed
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{slug}/clone/:
    post:
      operationId: api_courses_clone_create
      description: 'BACKWARD COMPATIBILITY: Redirect to standalone CourseCloneView'
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseClone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseClone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseClone'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseClone'
          description: ''
  /api/courses/{slug}/enroll/:
    post:
      operationId: api_courses_enroll_create
      description: Race-condition-safe enrollment using get_or_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{slug}/publish/:
    put:
      operationId: api_courses_publish_update
      description: 'BACKWARD COMPATIBILITY: Redirect to standalone CoursePublishingView'
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{slug}/unpublish/:
    put:
      operationId: api_courses_unpublish_update
      description: 'BACKWARD COMPATIBILITY: Redirect to standalone CoursePublishingView'
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{slug}/versions/:
    get:
      operationId: api_courses_versions_retrieve
      description: Get all versions of a course
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseVersion'
          description: ''
  /api/courses/featured/:
    get:
      operationId: api_courses_featured_retrieve
      description: Featured courses with safe pagination and proper DRF response
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Limit number of featured courses
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/debug/cache-stats/:
    get:
      operationId: api_debug_cache_stats_retrieve
      description: Get cache statistics and performance metrics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Cache statistics
          description: ''
  /api/debug/url-patterns/:
    get:
      operationId: api_debug_url_patterns_retrieve
      description: Get overview of URL patterns and routes
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: URL patterns information
          description: ''
  /api/enrollments/:
    get:
      operationId: api_enrollments_list
      description: Enrollment management with race condition prevention and schema
        compatibility
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
          description: ''
    post:
      operationId: api_enrollments_create
      description: Enrollment management with race condition prevention and schema
        compatibility
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
  /api/enrollments/{id}/:
    get:
      operationId: api_enrollments_retrieve
      description: Enrollment management with race condition prevention and schema
        compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    put:
      operationId: api_enrollments_update
      description: Enrollment management with race condition prevention and schema
        compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    patch:
      operationId: api_enrollments_partial_update
      description: Enrollment management with race condition prevention and schema
        compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    delete:
      operationId: api_enrollments_destroy
      description: Enrollment management with race condition prevention and schema
        compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Enrollment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/enrollments/{id}/unenroll/:
    post:
      operationId: api_enrollments_unenroll_create
      description: |-
        Safe unenrollment with certificate revocation
        FIXED: Now properly revokes premium certificates
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Enrollment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
  /api/featured/:
    get:
      operationId: api_featured_retrieve
      description: Get featured content across different types
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Limit number of featured items
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Featured content
          description: ''
  /api/health/:
    get:
      operationId: api_health_retrieve
      description: Comprehensive health check with system status
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: ''
  /api/instructor/ai-course-builder/:
    get:
      operationId: api_instructor_ai_course_builder_list
      description: |-
        ViewSet for managing AI Course Builder drafts.

        This viewset provides endpoints for creating, retrieving, updating,
        and finalizing course drafts created with the AI course builder.

        Actions:
        - initialize: Create a new draft
        - partial_update: Save changes to a draft
        - finalize: Create a published course from the draft
        - outline: Generate a course outline (async)
        - module: Generate content for a specific module (async)
        - lesson: Generate content for a specific lesson (async)
        - assessments: Generate assessments for the course (async)
        - task_status: Check the status of an async task
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
    post:
      operationId: api_instructor_ai_course_builder_create
      description: |-
        ViewSet for managing AI Course Builder drafts.

        This viewset provides endpoints for creating, retrieving, updating,
        and finalizing course drafts created with the AI course builder.

        Actions:
        - initialize: Create a new draft
        - partial_update: Save changes to a draft
        - finalize: Create a published course from the draft
        - outline: Generate a course outline (async)
        - module: Generate content for a specific module (async)
        - lesson: Generate content for a specific lesson (async)
        - assessments: Generate assessments for the course (async)
        - task_status: Check the status of an async task
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/:
    get:
      operationId: api_instructor_ai_course_builder_retrieve
      description: |-
        ViewSet for managing AI Course Builder drafts.

        This viewset provides endpoints for creating, retrieving, updating,
        and finalizing course drafts created with the AI course builder.

        Actions:
        - initialize: Create a new draft
        - partial_update: Save changes to a draft
        - finalize: Create a published course from the draft
        - outline: Generate a course outline (async)
        - module: Generate content for a specific module (async)
        - lesson: Generate content for a specific lesson (async)
        - assessments: Generate assessments for the course (async)
        - task_status: Check the status of an async task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
    put:
      operationId: api_instructor_ai_course_builder_update
      description: |-
        ViewSet for managing AI Course Builder drafts.

        This viewset provides endpoints for creating, retrieving, updating,
        and finalizing course drafts created with the AI course builder.

        Actions:
        - initialize: Create a new draft
        - partial_update: Save changes to a draft
        - finalize: Create a published course from the draft
        - outline: Generate a course outline (async)
        - module: Generate content for a specific module (async)
        - lesson: Generate content for a specific lesson (async)
        - assessments: Generate assessments for the course (async)
        - task_status: Check the status of an async task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
    patch:
      operationId: api_instructor_ai_course_builder_partial_update
      description: |-
        Update a draft with new data (handles autosave and manual saves).

        This method is called for PATCH requests and supports partial updates
        to any fields in the draft.

        Returns:
            Response with the updated draft data
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
    delete:
      operationId: api_instructor_ai_course_builder_destroy
      description: |-
        ViewSet for managing AI Course Builder drafts.

        This viewset provides endpoints for creating, retrieving, updating,
        and finalizing course drafts created with the AI course builder.

        Actions:
        - initialize: Create a new draft
        - partial_update: Save changes to a draft
        - finalize: Create a published course from the draft
        - outline: Generate a course outline (async)
        - module: Generate content for a specific module (async)
        - lesson: Generate content for a specific lesson (async)
        - assessments: Generate assessments for the course (async)
        - task_status: Check the status of an async task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/instructor/ai-course-builder/{id}/assessments/:
    post:
      operationId: api_instructor_ai_course_builder_assessments_create
      description: |-
        Generate assessments (quizzes) for the course.

        Uses a Celery task to generate assessments asynchronously.

        Returns:
            Response with task info for the assessments generation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/finalize/:
    post:
      operationId: api_instructor_ai_course_builder_finalize_create
      description: |-
        Finalize a draft by creating a published course from it.

        This method transfers all the content from the draft to
        create a new Course instance with its related objects.

        Returns:
            Response with the newly created course ID and URL
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/lesson/:
    post:
      operationId: api_instructor_ai_course_builder_lesson_create
      description: |-
        Generate detailed content for a specific lesson within a module.

        Uses a Celery task to generate lesson content asynchronously.

        Request Parameters:
            moduleIndex (int): Index of the parent module
            lessonIndex (int): Index of the lesson to generate content for

        Returns:
            Response with task info for the lesson generation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/module/:
    post:
      operationId: api_instructor_ai_course_builder_module_create
      description: |-
        Generate detailed content for a specific module.

        Uses a Celery task to generate module content asynchronously.

        Request Parameters:
            moduleIndex (int): Index of the module to generate content for

        Returns:
            Response with task info for the module generation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/outline/:
    post:
      operationId: api_instructor_ai_course_builder_outline_create
      description: |-
        Generate a course outline based on basic course information.

        This method uses a Celery task to handle the long-running AI operation.
        It immediately returns a task ID and status, which the client can use
        to poll for the completed result.

        Returns:
            Response with the task ID for the outline generation task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/{id}/task-status/{task_id}/:
    get:
      operationId: api_instructor_ai_course_builder_task_status_retrieve
      description: |-
        Check the status of an asynchronous task.

        This endpoint allows the frontend to poll for the status of
        long-running tasks like outline or content generation.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: task_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/ai-course-builder/health/:
    get:
      operationId: api_instructor_ai_course_builder_health_retrieve
      description: Returns a simple status check to verify the API is operational.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: ''
  /api/instructor/ai-course-builder/initialize/:
    post:
      operationId: api_instructor_ai_course_builder_initialize_create
      description: |-
        Create a new AI course builder draft.

        Returns:
            Response with the new draft ID and status
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AICourseBuilderDraft'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AICourseBuilderDraft'
          description: ''
  /api/instructor/courses/{course_slug}/analytics/:
    get:
      operationId: api_instructor_courses_analytics_retrieve
      description: Get detailed analytics for a specific course
      parameters:
      - in: path
        name: course_slug
        schema:
          type: string
        description: Course slug
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Course analytics data
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Course not found
          description: ''
  /api/instructor/dashboard/:
    get:
      operationId: api_instructor_dashboard_retrieve
      description: Get instructor dashboard data
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Instructor dashboard data
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied - instructor access required
          description: ''
  /api/lessons/:
    get:
      operationId: api_lessons_list
      description: List with proper DRF pagination instead of manual slicing
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonList'
          description: ''
  /api/lessons/{id}/:
    get:
      operationId: api_lessons_retrieve
      description: Lesson management with proper DRF pagination
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Lesson.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /api/modules/:
    get:
      operationId: api_modules_list
      description: Module management with public read access
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModuleList'
          description: ''
  /api/modules/{id}/:
    get:
      operationId: api_modules_retrieve
      description: Module management with public read access
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Module.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleDetail'
          description: ''
  /api/notes/:
    get:
      operationId: api_notes_list
      description: Student notes management with schema compatibility
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
    post:
      operationId: api_notes_create
      description: Student notes management with schema compatibility
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/notes/{id}/:
    get:
      operationId: api_notes_retrieve
      description: Student notes management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: api_notes_update
      description: Student notes management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: api_notes_partial_update
      description: Student notes management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: api_notes_destroy
      description: Student notes management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Note.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/progress/:
    get:
      operationId: api_progress_list
      description: Progress tracking viewset with schema compatibility
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Progress'
          description: ''
    post:
      operationId: api_progress_create
      description: Progress tracking viewset with schema compatibility
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Progress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Progress'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
          description: ''
  /api/progress/{id}/:
    get:
      operationId: api_progress_retrieve
      description: Progress tracking viewset with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Progress.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
          description: ''
    put:
      operationId: api_progress_update
      description: Progress tracking viewset with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Progress.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Progress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Progress'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
          description: ''
    patch:
      operationId: api_progress_partial_update
      description: Progress tracking viewset with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Progress.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProgress'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
          description: ''
    delete:
      operationId: api_progress_destroy
      description: Progress tracking viewset with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Progress.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/reviews/:
    get:
      operationId: api_reviews_list
      description: Course review management with schema compatibility
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
    post:
      operationId: api_reviews_create
      description: Course review management with schema compatibility
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/{id}/:
    get:
      operationId: api_reviews_retrieve
      description: Course review management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_reviews_update
      description: Course review management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_reviews_partial_update
      description: Course review management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_reviews_destroy
      description: Course review management with schema compatibility
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/search/:
    get:
      operationId: api_search_retrieve
      description: Perform unified search across content types
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Limit results per type
      - in: query
        name: q
        schema:
          type: string
        description: Search query
        required: true
      - in: query
        name: type
        schema:
          type: string
        description: 'Search type: courses, categories, all'
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Search results
          description: ''
  /api/statistics/instructor/:
    get:
      operationId: api_statistics_instructor_retrieve
      description: Get teaching statistics for the current user (instructor only)
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/statistics/platform/:
    get:
      operationId: api_statistics_platform_retrieve
      description: Get platform-wide statistics
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/statistics/user/learning/:
    get:
      operationId: api_statistics_user_learning_retrieve
      description: Get learning statistics for the current user
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/system/db-stats/:
    get:
      operationId: api_system_db_stats_retrieve
      description: View to get basic database statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/system/db-status/:
    get:
      operationId: api_system_db_status_retrieve
      description: Simple view to check database connectivity
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/testimonials/:
    get:
      operationId: api_testimonials_list
      description: API endpoint for retrieving testimonials
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Testimonial'
          description: ''
  /api/testimonials/{id}/:
    get:
      operationId: api_testimonials_retrieve
      description: API endpoint for retrieving testimonials
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this testimonial.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
  /api/testimonials/featured/:
    get:
      operationId: api_testimonials_featured_list
      description: API endpoint to get featured testimonials
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Testimonial'
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/email/verify/:
    post:
      operationId: api_user_email_verify_create
      description: Verify email address using token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ''
  /api/user/email/verify/resend/:
    post:
      operationId: api_user_email_verify_resend_create
      description: Resend email verification link
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerification'
          description: ''
  /api/user/login/:
    post:
      operationId: api_user_login_create
      description: User login with throttling
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/user/logout/:
    post:
      operationId: api_user_logout_create
      description: User logout with session invalidation and token blacklisting
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user/me/:
    get:
      operationId: api_user_me_retrieve
      description: View and update the authenticated user's information
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: api_user_me_update
      description: View and update the authenticated user's information
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: api_user_me_partial_update
      description: View and update the authenticated user's information
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /api/user/password/change/:
    post:
      operationId: api_user_password_change_create
      description: Change password for authenticated user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
  /api/user/password/reset/:
    post:
      operationId: api_user_password_reset_create
      description: Request a password reset email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/user/password/reset/confirm/:
    post:
      operationId: api_user_password_reset_confirm_create
      description: Confirm a password reset using a token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/user/profile/:
    get:
      operationId: api_user_profile_retrieve
      description: View and update user profile
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_user_profile_update
      description: View and update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_user_profile_partial_update
      description: View and update user profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/user/profile/comprehensive/:
    put:
      operationId: api_user_profile_comprehensive_update
      description: Comprehensive profile update including both user and profile data
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
  /api/user/progress-stats/:
    get:
      operationId: user_progress_stats_legacy
      description: Enhanced progress statistics with improved caching
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressStats'
          description: ''
  /api/user/progress/stats/:
    get:
      operationId: user_progress_stats_detailed
      description: Enhanced progress statistics with improved caching
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/user/register/:
    post:
      operationId: api_user_register_create
      description: Register a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/user/sessions/:
    get:
      operationId: api_user_sessions_list
      description: Manage user sessions (listing and invalidation)
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSession'
          description: ''
    post:
      operationId: api_user_sessions_create
      description: Manage user sessions (listing and invalidation)
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: ''
  /api/user/sessions/{id}/:
    get:
      operationId: api_user_sessions_retrieve
      description: Manage user sessions (listing and invalidation)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: ''
    put:
      operationId: api_user_sessions_update
      description: Manage user sessions (listing and invalidation)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: ''
    patch:
      operationId: api_user_sessions_partial_update
      description: Manage user sessions (listing and invalidation)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSession'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: ''
    delete:
      operationId: api_user_sessions_destroy
      description: Manage user sessions (listing and invalidation)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/user/social/complete/:
    post:
      operationId: api_user_social_complete_create
      description: Complete OAuth flow for social authentication
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/social/error/:
    get:
      operationId: api_user_social_error_retrieve
      description: |-
        API view to handle social auth errors.
        Enhanced with secure logging.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/social/github/:
    get:
      operationId: api_user_social_github_retrieve
      description: Initiate GitHub OAuth flow
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/social/google/:
    get:
      operationId: api_user_social_google_retrieve
      description: Initiate Google OAuth flow
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/subscription/:
    get:
      operationId: api_user_subscription_list
      description: Manage user subscriptions
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
    post:
      operationId: api_user_subscription_create
      description: Manage user subscriptions
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/user/subscription/{id}/:
    get:
      operationId: api_user_subscription_retrieve
      description: Manage user subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    put:
      operationId: api_user_subscription_update
      description: Manage user subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: api_user_subscription_partial_update
      description: Manage user subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    delete:
      operationId: api_user_subscription_destroy
      description: Manage user subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/user/subscription/cancel/:
    post:
      operationId: api_user_subscription_cancel_create
      description: Manage user subscriptions
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/user/subscription/current/:
    get:
      operationId: api_user_subscription_current_retrieve
      description: Manage user subscriptions
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/user/subscription/downgrade/:
    post:
      operationId: api_user_subscription_downgrade_create
      description: Manage user subscriptions
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/user/subscription/upgrade/:
    post:
      operationId: api_user_subscription_upgrade_create
      description: Manage user subscriptions
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/user/token/:
    post:
      operationId: api_user_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/user/token/refresh/:
    post:
      operationId: api_user_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/version/:
    get:
      operationId: api_version_retrieve
      description: Get API version and metadata
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: API version information
          description: ''
components:
  schemas:
    AICourseBuilderDraft:
      type: object
      description: |-
        Serializer for the AICourseBuilderDraft model.

        This serializer handles the conversion of AICourseBuilderDraft instances
        to and from JSON, handling all fields required for the AI course builder
        workflow.
      properties:
        id:
          type: integer
          readOnly: true
        instructor:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/AICourseBuilderDraftStatusEnum'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        course_objectives:
          nullable: true
        target_audience:
          nullable: true
        difficulty_level:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DifficultyLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        outline:
          nullable: true
        content:
          nullable: true
        assessments:
          nullable: true
        has_outline:
          type: boolean
        has_modules:
          type: boolean
        has_lessons:
          type: boolean
        has_assessments:
          type: boolean
        generation_metadata:
          nullable: true
      required:
      - created_at
      - id
      - instructor
      - updated_at
    AICourseBuilderDraftStatusEnum:
      enum:
      - DRAFT
      - READY
      - PUBLISHED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `READY` - Ready for Publishing
        * `PUBLISHED` - Published
    AccessLevelEnum:
      enum:
      - guest
      - registered
      - premium
      - enterprise
      type: string
      description: |-
        * `guest` - Guest - Unregistered Users
        * `registered` - Registered - Logged In Users
        * `premium` - Premium - Paid Subscribers
        * `enterprise` - Enterprise - Corporate Users
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      description: Enhanced category serializer with optimized queries and context
        propagation
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Category name (minimum 2 characters)
          maxLength: 100
        description:
          type: string
          description: Optional category description
        icon:
          type: string
          description: CSS icon class
          maxLength: 50
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Sort order for display
        parent:
          type: integer
          nullable: true
          description: Parent category for hierarchy
        course_count:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        featured:
          type: boolean
          description: Whether category is featured on homepage
      required:
      - course_count
      - created_date
      - id
      - slug
      - updated_date
    Certificate:
      type: object
      description: Enhanced serializer for course completion certificates
      properties:
        id:
          type: integer
          readOnly: true
        enrollment:
          allOf:
          - $ref: '#/components/schemas/Enrollment'
          readOnly: true
        certificate_number:
          type: string
          readOnly: true
          description: Unique certificate number
        course:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        verification_url:
          type: string
          readOnly: true
        is_valid:
          type: boolean
          description: Whether certificate is valid
        verification_hash:
          type: string
          readOnly: true
          description: SHA-256 hash for verification
        template_version:
          type: string
          description: Certificate template version
          maxLength: 10
        revocation_date:
          type: string
          format: date-time
          nullable: true
          description: Date when certificate was revoked
        revocation_reason:
          type: string
          description: Reason for certificate revocation
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - certificate_number
      - course
      - created_date
      - enrollment
      - id
      - updated_date
      - user
      - verification_hash
      - verification_url
    CompletionStatusEnum:
      enum:
      - not_started
      - in_progress
      - partially_complete
      - complete
      - published
      - archived
      - suspended
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `partially_complete` - Partially Complete
        * `complete` - Complete
        * `published` - Published
        * `archived` - Archived
        * `suspended` - Suspended
    Course:
      type: object
      description: Enhanced course serializer with comprehensive optimizations and
        validation
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Course title (minimum 3 characters)
          maxLength: 160
        subtitle:
          type: string
          description: Optional course subtitle
          maxLength: 255
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          description: Course description (minimum 50 characters)
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: Course thumbnail
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Course price (decimal precision)
        discount_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
          description: Discounted price (optional, decimal precision)
        discount_ends:
          type: string
          format: date-time
          nullable: true
          description: Discount expiration date
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          description: |-
            Course difficulty level

            * `beginner` - Beginner
            * `intermediate` - Intermediate
            * `advanced` - Advanced
            * `all_levels` - All Levels
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          description: Get human-readable duration with error handling
          readOnly: true
        has_certificate:
          type: boolean
          description: Whether course offers completion certificate
        is_featured:
          type: boolean
          description: Whether course is featured on homepage
        is_published:
          type: boolean
        is_draft:
          type: boolean
          description: Whether course is in draft state
        published_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/CourseInstructor'
          readOnly: true
        rating:
          type: string
          readOnly: true
        enrolled_students:
          type: string
          readOnly: true
        is_enrolled:
          type: string
          readOnly: true
        creation_method:
          allOf:
          - $ref: '#/components/schemas/CreationMethodEnum'
          description: |-
            Method used to create course

            * `builder` - Drag & Drop Builder
            * `wizard` - Step-by-Step Wizard
            * `ai` - AI-Powered Builder
            * `import` - Imported Course
            * `manual` - Manual Creation
            * `template` - From Template
        completion_status:
          allOf:
          - $ref: '#/components/schemas/CompletionStatusEnum'
          description: |-
            Course completion status

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `partially_complete` - Partially Complete
            * `complete` - Complete
            * `published` - Published
            * `archived` - Archived
            * `suspended` - Suspended
        completion_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Completion percentage (0-100)
        version:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          readOnly: true
          description: Course version number (decimal precision)
        module_count:
          type: string
          readOnly: true
        lesson_count:
          type: string
          readOnly: true
        requirements:
          description: List of course requirements
        skills:
          description: List of skills students will learn
        learning_objectives:
          description: List of learning objectives
        target_audience:
          type: string
          description: Description of target audience
        avg_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Average rating from reviews (decimal precision)
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total number of reviews
        enrolled_students_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Cached count of enrolled students
        meta_keywords:
          type: string
          description: SEO meta keywords
          maxLength: 255
        meta_description:
          type: string
          nullable: true
          description: SEO meta description
      required:
      - category
      - category_id
      - duration_display
      - enrolled_students
      - id
      - instructors
      - is_enrolled
      - lesson_count
      - module_count
      - published_date
      - rating
      - updated_date
      - version
    CourseClone:
      type: object
      description: Enhanced serializer for course cloning operations with validation
      properties:
        title:
          type: string
          description: New title for the cloned course. If not provided, uses original
            title with suffix.
          maxLength: 160
        description:
          type: string
          description: New description for the cloned course. If not provided, uses
            original description.
        copy_modules:
          type: boolean
          default: true
          description: Whether to copy all modules and lessons from the original course.
        copy_resources:
          type: boolean
          default: true
          description: Whether to copy all resources from the original course.
        copy_assessments:
          type: boolean
          default: true
          description: Whether to copy all assessments from the original course.
        create_as_draft:
          type: boolean
          default: true
          description: Whether to create the cloned course as a draft.
    CourseDetail:
      type: object
      description: Enhanced detailed course serializer with comprehensive information
        and optimization
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Course title (minimum 3 characters)
          maxLength: 160
        subtitle:
          type: string
          description: Optional course subtitle
          maxLength: 255
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          description: Course description (minimum 50 characters)
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: Course thumbnail
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Course price (decimal precision)
        discount_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
          description: Discounted price (optional, decimal precision)
        discount_ends:
          type: string
          format: date-time
          nullable: true
          description: Discount expiration date
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          description: |-
            Course difficulty level

            * `beginner` - Beginner
            * `intermediate` - Intermediate
            * `advanced` - Advanced
            * `all_levels` - All Levels
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          description: Get human-readable duration with error handling
          readOnly: true
        has_certificate:
          type: boolean
          description: Whether course offers completion certificate
        is_featured:
          type: boolean
          description: Whether course is featured on homepage
        is_published:
          type: boolean
        is_draft:
          type: boolean
          description: Whether course is in draft state
        published_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/CourseInstructor'
          readOnly: true
        rating:
          type: string
          readOnly: true
        enrolled_students:
          type: string
          readOnly: true
        is_enrolled:
          type: string
          readOnly: true
        creation_method:
          allOf:
          - $ref: '#/components/schemas/CreationMethodEnum'
          description: |-
            Method used to create course

            * `builder` - Drag & Drop Builder
            * `wizard` - Step-by-Step Wizard
            * `ai` - AI-Powered Builder
            * `import` - Imported Course
            * `manual` - Manual Creation
            * `template` - From Template
        completion_status:
          allOf:
          - $ref: '#/components/schemas/CompletionStatusEnum'
          description: |-
            Course completion status

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `partially_complete` - Partially Complete
            * `complete` - Complete
            * `published` - Published
            * `archived` - Archived
            * `suspended` - Suspended
        completion_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Completion percentage (0-100)
        version:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          readOnly: true
          description: Course version number (decimal precision)
        module_count:
          type: string
          readOnly: true
        lesson_count:
          type: string
          readOnly: true
        requirements:
          description: List of course requirements
        skills:
          description: List of skills students will learn
        learning_objectives:
          description: List of learning objectives
        target_audience:
          type: string
          description: Description of target audience
        avg_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Average rating from reviews (decimal precision)
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total number of reviews
        enrolled_students_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Cached count of enrolled students
        meta_keywords:
          type: string
          description: SEO meta keywords
          maxLength: 255
        meta_description:
          type: string
          nullable: true
          description: SEO meta description
        modules:
          type: array
          items:
            $ref: '#/components/schemas/ModuleDetail'
          readOnly: true
        user_progress:
          type: string
          readOnly: true
        version_info:
          allOf:
          - $ref: '#/components/schemas/CourseVersion'
          readOnly: true
        enrollment_info:
          type: string
          readOnly: true
        recent_reviews:
          type: string
          readOnly: true
      required:
      - category
      - category_id
      - duration_display
      - enrolled_students
      - enrollment_info
      - id
      - instructors
      - is_enrolled
      - lesson_count
      - module_count
      - modules
      - published_date
      - rating
      - recent_reviews
      - updated_date
      - user_progress
      - version
      - version_info
    CourseInstructor:
      type: object
      description: Enhanced serializer for course instructor information with optimizations
      properties:
        instructor:
          type: string
          readOnly: true
        is_lead:
          type: boolean
          title: Is Lead Instructor
        is_active:
          type: boolean
        instructor_stats:
          type: string
          readOnly: true
        joined_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - instructor
      - instructor_stats
      - joined_date
      - updated_date
    CourseVersion:
      type: object
      description: Enhanced serializer for course versioning with optimizations
      properties:
        id:
          type: integer
          readOnly: true
        version:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          description: Course version number (decimal precision)
        is_draft:
          type: boolean
          description: Whether course is in draft state
        parent_version:
          type: string
          readOnly: true
        children:
          type: string
          readOnly: true
        title:
          type: string
          description: Course title (minimum 3 characters)
          maxLength: 160
        slug:
          type: string
          maxLength: 180
          pattern: ^[-a-zA-Z0-9_]+$
        version_family:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - children
      - created_date
      - id
      - parent_version
      - updated_date
      - version_family
    CreationMethodEnum:
      enum:
      - builder
      - wizard
      - ai
      - import
      - manual
      - template
      type: string
      description: |-
        * `builder` - Drag & Drop Builder
        * `wizard` - Step-by-Step Wizard
        * `ai` - AI-Powered Builder
        * `import` - Imported Course
        * `manual` - Manual Creation
        * `template` - From Template
    DifficultyLevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      - all_levels
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
        * `all_levels` - All Levels
    EmailVerification:
      type: object
      description: Serializer for email verification tokens.
      properties:
        token:
          type: string
          format: uuid
      required:
      - token
    Enrollment:
      type: object
      description: |-
        Enhanced serializer for student course enrollments with optimization
        FIXED: Security issues with course queryset exposure
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_id:
          type: integer
          writeOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/EnrollmentStatusEnum'
          description: |-
            Enrollment status

            * `active` - Active
            * `completed` - Completed
            * `dropped` - Dropped
            * `suspended` - Suspended
            * `unenrolled` - Unenrolled
            * `expired` - Expired
            * `pending` - Pending
        completion_date:
          type: string
          format: date-time
          nullable: true
          description: Date when course was completed
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Last time student accessed the course
        total_time_spent:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total time spent in seconds
        progress_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Enrollment progress percentage (0-100)
        progress_summary:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - course_id
      - created_date
      - id
      - last_accessed
      - progress_summary
      - updated_date
    EnrollmentStatusEnum:
      enum:
      - active
      - completed
      - dropped
      - suspended
      - unenrolled
      - expired
      - pending
      type: string
      description: |-
        * `active` - Active
        * `completed` - Completed
        * `dropped` - Dropped
        * `suspended` - Suspended
        * `unenrolled` - Unenrolled
        * `expired` - Expired
        * `pending` - Pending
    HealthCheck:
      type: object
      description: Simple serializer for health check endpoints
      properties:
        status:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        components:
          type: object
          additionalProperties: {}
        statistics:
          type: object
          additionalProperties: {}
      required:
      - status
      - timestamp
    Lesson:
      type: object
      description: Enhanced lesson serializer with comprehensive optimizations and
        access control
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Lesson title (minimum 2 characters)
          maxLength: 255
        content:
          type: string
          nullable: true
          description: Full content visible to authorized users (minimum 10 characters)
        guest_content:
          type: string
          description: Preview content for unregistered users
        registered_content:
          type: string
          description: Limited content for registered users
        access_level:
          allOf:
          - $ref: '#/components/schemas/AccessLevelEnum'
          description: |-
            Minimum access level required to view this lesson

            * `guest` - Guest - Unregistered Users
            * `registered` - Registered - Logged In Users
            * `premium` - Premium - Paid Subscribers
            * `enterprise` - Enterprise - Corporate Users
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          description: |-
            Type of lesson content

            * `video` - Video
            * `reading` - Reading
            * `interactive` - Interactive
            * `quiz` - Quiz
            * `lab_exercise` - Lab Exercise
            * `assignment` - Assignment
            * `discussion` - Discussion
            * `live_session` - Live Session
            * `download` - Download
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        has_assessment:
          type: boolean
          description: Whether lesson includes an assessment
        has_lab:
          type: boolean
          description: Whether lesson includes a lab exercise
        is_free_preview:
          type: boolean
          description: Whether lesson is available as free preview
        video_url:
          type: string
          format: uri
          description: URL for video content
          maxLength: 200
        transcript:
          type: string
          description: Video transcript or lesson transcript
        resources:
          type: string
          readOnly: true
        premium_resources:
          type: string
          readOnly: true
        is_completed:
          type: string
          readOnly: true
        assessment:
          type: string
          readOnly: true
        progress_percentage:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - assessment
      - created_date
      - duration_display
      - id
      - is_completed
      - premium_resources
      - progress_percentage
      - resources
      - updated_date
    LevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      - all_levels
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
        * `all_levels` - All Levels
    Login:
      type: object
      description: |-
        Serializer for user login with enhanced error handling.
        ENHANCED: Now provides specific error messages for non-existent email vs incorrect password.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        remember_me:
          type: boolean
          default: false
      required:
      - email
      - password
    Module:
      type: object
      description: Enhanced module serializer with comprehensive optimizations
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Module title (minimum 2 characters)
          maxLength: 255
        description:
          type: string
          description: Module description
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        is_published:
          type: boolean
        lessons:
          type: string
          readOnly: true
        lessons_count:
          type: string
          readOnly: true
        course:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_date
      - duration_display
      - id
      - lessons
      - lessons_count
      - updated_date
    ModuleDetail:
      type: object
      description: Enhanced detailed module serializer with comprehensive information
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Module title (minimum 2 characters)
          maxLength: 255
        description:
          type: string
          description: Module description
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        is_published:
          type: boolean
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
          readOnly: true
        lessons_count:
          type: string
          readOnly: true
        course:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        completion_stats:
          type: string
          readOnly: true
      required:
      - completion_stats
      - created_date
      - duration_display
      - id
      - lessons
      - lessons_count
      - updated_date
    Note:
      type: object
      description: |-
        Enhanced serializer for student notes
        FIXED: Proper lesson serializer import handling
      properties:
        id:
          type: integer
          readOnly: true
        lesson:
          type: string
          readOnly: true
        lesson_id:
          type: integer
          writeOnly: true
        content:
          type: string
          description: Note content
          minLength: 1
        is_private:
          type: boolean
          description: Whether this note is private to the user
        tags:
          description: Tags for organizing notes
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_date
      - id
      - lesson
      - lesson_id
      - updated_date
    NullEnum:
      enum:
      - null
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PaginatedLessonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
    PaginatedModuleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Module'
    PasswordChange:
      type: object
      description: Serializer for changing password while logged in.
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - new_password
      - old_password
    PasswordResetConfirm:
      type: object
      description: |-
        Serializer for confirming password reset using token.
        CRITICAL FIX: Updated token validation to use direct model query.
      properties:
        token:
          type: string
          format: uuid
        password:
          type: string
          writeOnly: true
      required:
      - password
      - token
    PasswordResetRequest:
      type: object
      description: Serializer for requesting password reset.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedAICourseBuilderDraft:
      type: object
      description: |-
        Serializer for the AICourseBuilderDraft model.

        This serializer handles the conversion of AICourseBuilderDraft instances
        to and from JSON, handling all fields required for the AI course builder
        workflow.
      properties:
        id:
          type: integer
          readOnly: true
        instructor:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/AICourseBuilderDraftStatusEnum'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        course_objectives:
          nullable: true
        target_audience:
          nullable: true
        difficulty_level:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DifficultyLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        outline:
          nullable: true
        content:
          nullable: true
        assessments:
          nullable: true
        has_outline:
          type: boolean
        has_modules:
          type: boolean
        has_lessons:
          type: boolean
        has_assessments:
          type: boolean
        generation_metadata:
          nullable: true
    PatchedCourse:
      type: object
      description: Enhanced course serializer with comprehensive optimizations and
        validation
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Course title (minimum 3 characters)
          maxLength: 160
        subtitle:
          type: string
          description: Optional course subtitle
          maxLength: 255
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          description: Course description (minimum 50 characters)
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: Course thumbnail
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Course price (decimal precision)
        discount_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
          description: Discounted price (optional, decimal precision)
        discount_ends:
          type: string
          format: date-time
          nullable: true
          description: Discount expiration date
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          description: |-
            Course difficulty level

            * `beginner` - Beginner
            * `intermediate` - Intermediate
            * `advanced` - Advanced
            * `all_levels` - All Levels
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        duration_display:
          type: string
          description: Get human-readable duration with error handling
          readOnly: true
        has_certificate:
          type: boolean
          description: Whether course offers completion certificate
        is_featured:
          type: boolean
          description: Whether course is featured on homepage
        is_published:
          type: boolean
        is_draft:
          type: boolean
          description: Whether course is in draft state
        published_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/CourseInstructor'
          readOnly: true
        rating:
          type: string
          readOnly: true
        enrolled_students:
          type: string
          readOnly: true
        is_enrolled:
          type: string
          readOnly: true
        creation_method:
          allOf:
          - $ref: '#/components/schemas/CreationMethodEnum'
          description: |-
            Method used to create course

            * `builder` - Drag & Drop Builder
            * `wizard` - Step-by-Step Wizard
            * `ai` - AI-Powered Builder
            * `import` - Imported Course
            * `manual` - Manual Creation
            * `template` - From Template
        completion_status:
          allOf:
          - $ref: '#/components/schemas/CompletionStatusEnum'
          description: |-
            Course completion status

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `partially_complete` - Partially Complete
            * `complete` - Complete
            * `published` - Published
            * `archived` - Archived
            * `suspended` - Suspended
        completion_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Completion percentage (0-100)
        version:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          readOnly: true
          description: Course version number (decimal precision)
        module_count:
          type: string
          readOnly: true
        lesson_count:
          type: string
          readOnly: true
        requirements:
          description: List of course requirements
        skills:
          description: List of skills students will learn
        learning_objectives:
          description: List of learning objectives
        target_audience:
          type: string
          description: Description of target audience
        avg_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Average rating from reviews (decimal precision)
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total number of reviews
        enrolled_students_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Cached count of enrolled students
        meta_keywords:
          type: string
          description: SEO meta keywords
          maxLength: 255
        meta_description:
          type: string
          nullable: true
          description: SEO meta description
    PatchedEnrollment:
      type: object
      description: |-
        Enhanced serializer for student course enrollments with optimization
        FIXED: Security issues with course queryset exposure
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_id:
          type: integer
          writeOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/EnrollmentStatusEnum'
          description: |-
            Enrollment status

            * `active` - Active
            * `completed` - Completed
            * `dropped` - Dropped
            * `suspended` - Suspended
            * `unenrolled` - Unenrolled
            * `expired` - Expired
            * `pending` - Pending
        completion_date:
          type: string
          format: date-time
          nullable: true
          description: Date when course was completed
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Last time student accessed the course
        total_time_spent:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total time spent in seconds
        progress_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Enrollment progress percentage (0-100)
        progress_summary:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
    PatchedNote:
      type: object
      description: |-
        Enhanced serializer for student notes
        FIXED: Proper lesson serializer import handling
      properties:
        id:
          type: integer
          readOnly: true
        lesson:
          type: string
          readOnly: true
        lesson_id:
          type: integer
          writeOnly: true
        content:
          type: string
          description: Note content
          minLength: 1
        is_private:
          type: boolean
          description: Whether this note is private to the user
        tags:
          description: Tags for organizing notes
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
    PatchedProfile:
      type: object
      description: |-
        Serializer for user profile information.

        This excludes user, created_at and updated_at fields as they're handled elsewhere
        or not needed by the frontend.
      properties:
        id:
          type: integer
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        website:
          type: string
          format: uri
          maxLength: 200
        linkedin:
          type: string
          format: uri
          maxLength: 200
        twitter:
          type: string
          maxLength: 100
        github:
          type: string
          maxLength: 100
        expertise:
          type: string
          maxLength: 200
        teaching_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        educational_background:
          type: string
        interests:
          type: string
        receive_email_notifications:
          type: boolean
        receive_marketing_emails:
          type: boolean
    PatchedProgress:
      type: object
      description: Enhanced serializer for student lesson progress
      properties:
        id:
          type: integer
          readOnly: true
        lesson:
          allOf:
          - $ref: '#/components/schemas/Lesson'
          readOnly: true
        lesson_id:
          type: integer
          writeOnly: true
        is_completed:
          type: boolean
          description: Whether lesson is completed
        completed_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date when lesson was completed
        time_spent:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Time spent on this lesson in seconds
        progress_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Progress within this specific lesson (0-100)
        notes:
          type: string
          description: Student notes for this lesson
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Last time lesson was accessed
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
    PatchedReview:
      type: object
      description: Enhanced serializer for course reviews
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Rating from 1 to 5 stars
        title:
          type: string
          description: Review title
          maxLength: 255
        content:
          type: string
          description: Review content (minimum 10 characters)
          minLength: 10
        helpful_count:
          type: integer
          readOnly: true
          description: Number of users who found this review helpful
        helpful_votes:
          type: string
          readOnly: true
        is_verified_purchase:
          type: boolean
          readOnly: true
          description: Whether reviewer is enrolled in the course
        is_approved:
          type: boolean
          description: Whether review is approved for display
        moderation_notes:
          type: string
          description: Internal moderation notes
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
    PatchedSubscription:
      type: object
      description: |-
        Serializer for user subscription information.

        This adds computed fields needed by the frontend:
        - is_active: Whether subscription is currently active (UPDATED: now uses @property)
        - days_remaining: Days left in current subscription period
      properties:
        tier:
          $ref: '#/components/schemas/TierEnum'
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        is_auto_renew:
          type: boolean
        last_payment_date:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: string
          readOnly: true
        days_remaining:
          type: string
          readOnly: true
    PatchedUserDetail:
      type: object
      description: |-
        Extended user serializer with more detailed information.

        This adds any additional user information needed by the frontend.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_email_verified:
          type: boolean
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
    PatchedUserSession:
      type: object
      description: Serializer for user session management.
      properties:
        id:
          type: integer
          readOnly: true
        session_key:
          type: string
          maxLength: 255
        ip_address:
          type: string
        user_agent:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
        last_activity:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        device_type:
          type: string
          maxLength: 50
        location:
          type: string
          maxLength: 100
        login_method:
          type: string
          nullable: true
          maxLength: 50
    Profile:
      type: object
      description: |-
        Serializer for user profile information.

        This excludes user, created_at and updated_at fields as they're handled elsewhere
        or not needed by the frontend.
      properties:
        id:
          type: integer
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        website:
          type: string
          format: uri
          maxLength: 200
        linkedin:
          type: string
          format: uri
          maxLength: 200
        twitter:
          type: string
          maxLength: 100
        github:
          type: string
          maxLength: 100
        expertise:
          type: string
          maxLength: 200
        teaching_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        educational_background:
          type: string
        interests:
          type: string
        receive_email_notifications:
          type: boolean
        receive_marketing_emails:
          type: boolean
      required:
      - id
    Progress:
      type: object
      description: Enhanced serializer for student lesson progress
      properties:
        id:
          type: integer
          readOnly: true
        lesson:
          allOf:
          - $ref: '#/components/schemas/Lesson'
          readOnly: true
        lesson_id:
          type: integer
          writeOnly: true
        is_completed:
          type: boolean
          description: Whether lesson is completed
        completed_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date when lesson was completed
        time_spent:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Time spent on this lesson in seconds
        progress_percentage:
          type: integer
          maximum: 100
          minimum: 0
          description: Progress within this specific lesson (0-100)
        notes:
          type: string
          description: Student notes for this lesson
        last_accessed:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Last time lesson was accessed
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - completed_date
      - created_date
      - id
      - last_accessed
      - lesson
      - lesson_id
      - updated_date
    ProgressStats:
      type: object
      description: Serializer for user progress statistics
      properties:
        totalCourses:
          type: integer
        coursesCompleted:
          type: integer
        coursesInProgress:
          type: integer
        totalLessons:
          type: integer
        completedLessons:
          type: integer
        completionPercentage:
          type: number
          format: double
        hoursSpent:
          type: number
          format: double
        totalTimeSpent:
          type: integer
        assessmentsCompleted:
          type: integer
        averageScore:
          type: number
          format: double
        certificatesEarned:
          type: integer
        recentActivity:
          type: array
          items:
            type: object
            additionalProperties: {}
        generatedAt:
          type: string
          format: date-time
      required:
      - assessmentsCompleted
      - averageScore
      - certificatesEarned
      - completedLessons
      - completionPercentage
      - coursesCompleted
      - coursesInProgress
      - generatedAt
      - hoursSpent
      - totalCourses
      - totalLessons
      - totalTimeSpent
    ResendVerification:
      type: object
      description: Serializer for resending email verification.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Review:
      type: object
      description: Enhanced serializer for course reviews
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Rating from 1 to 5 stars
        title:
          type: string
          description: Review title
          maxLength: 255
        content:
          type: string
          description: Review content (minimum 10 characters)
          minLength: 10
        helpful_count:
          type: integer
          readOnly: true
          description: Number of users who found this review helpful
        helpful_votes:
          type: string
          readOnly: true
        is_verified_purchase:
          type: boolean
          readOnly: true
          description: Whether reviewer is enrolled in the course
        is_approved:
          type: boolean
          description: Whether review is approved for display
        moderation_notes:
          type: string
          description: Internal moderation notes
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_date
      - helpful_count
      - helpful_votes
      - id
      - is_verified_purchase
      - rating
      - updated_date
      - user
    RoleEnum:
      enum:
      - student
      - instructor
      - admin
      - staff
      type: string
      description: |-
        * `student` - Student
        * `instructor` - Instructor
        * `admin` - Administrator
        * `staff` - Staff
    Subscription:
      type: object
      description: |-
        Serializer for user subscription information.

        This adds computed fields needed by the frontend:
        - is_active: Whether subscription is currently active (UPDATED: now uses @property)
        - days_remaining: Days left in current subscription period
      properties:
        tier:
          $ref: '#/components/schemas/TierEnum'
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        is_auto_renew:
          type: boolean
        last_payment_date:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: string
          readOnly: true
        days_remaining:
          type: string
          readOnly: true
      required:
      - days_remaining
      - is_active
      - start_date
    SubscriptionStatusEnum:
      enum:
      - active
      - expired
      - cancelled
      - pending
      type: string
      description: |-
        * `active` - Active
        * `expired` - Expired
        * `cancelled` - Cancelled
        * `pending` - Pending
    Testimonial:
      type: object
      description: Serializer for the Testimonial model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        role:
          type: string
          maxLength: 100
        content:
          type: string
        rating:
          type: integer
          maximum: 5
          minimum: 1
        avatar:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - id
      - name
      - role
    TierEnum:
      enum:
      - guest
      - registered
      - premium
      type: string
      description: |-
        * `guest` - Guest
        * `registered` - Registered
        * `premium` - Premium
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TypeEnum:
      enum:
      - video
      - reading
      - interactive
      - quiz
      - lab_exercise
      - assignment
      - discussion
      - live_session
      - download
      type: string
      description: |-
        * `video` - Video
        * `reading` - Reading
        * `interactive` - Interactive
        * `quiz` - Quiz
        * `lab_exercise` - Lab Exercise
        * `assignment` - Assignment
        * `discussion` - Discussion
        * `live_session` - Live Session
        * `download` - Download
    UpdateProfile:
      type: object
      description: |-
        Serializer for updating user profile information.

        This allows updating the user's name and profile details.
      properties:
        first_name:
          type: string
        last_name:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
    UserCreate:
      type: object
      description: |-
        Serializer for user registration.

        This handles:
        - Password validation and confirmation
        - Creation of related profile
        - Initial user setup
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
      - role
      - username
    UserDetail:
      type: object
      description: |-
        Extended user serializer with more detailed information.

        This adds any additional user information needed by the frontend.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_email_verified:
          type: boolean
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - is_email_verified
      - last_login
      - profile
      - subscription
      - username
    UserSession:
      type: object
      description: Serializer for user session management.
      properties:
        id:
          type: integer
          readOnly: true
        session_key:
          type: string
          maxLength: 255
        ip_address:
          type: string
        user_agent:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
        last_activity:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        device_type:
          type: string
          maxLength: 50
        location:
          type: string
          maxLength: 100
        login_method:
          type: string
          nullable: true
          maxLength: 50
      required:
      - created_at
      - expires_at
      - id
      - ip_address
      - last_activity
      - session_key
      - user_agent
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
