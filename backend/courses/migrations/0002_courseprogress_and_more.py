# Generated by Django 5.2 on 2025-06-21 13:39

import courses.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Course completion percentage (0.00 to 100.00)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('last_accessed', models.DateTimeField(auto_now=True, help_text='Last time the user accessed this course')),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='When the user first started this course')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the user completed this course', null=True)),
                ('total_time_spent', models.PositiveIntegerField(default=0, help_text='Total time spent on this course in seconds')),
                ('lessons_completed', models.PositiveIntegerField(default=0, help_text='Number of lessons completed')),
                ('assessments_passed', models.PositiveIntegerField(default=0, help_text='Number of assessments passed')),
                ('study_streak_days', models.PositiveIntegerField(default=0, help_text='Consecutive days of course activity')),
                ('last_study_date', models.DateField(blank=True, help_text='Last date the user studied this course', null=True)),
            ],
            options={
                'verbose_name': 'Course Progress',
                'verbose_name_plural': 'Course Progress Records',
                'ordering': ['-last_accessed'],
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='courseinstructor',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='courseinstructor',
            name='course',
        ),
        migrations.RemoveField(
            model_name='courseinstructor',
            name='instructor',
        ),
        migrations.AlterModelOptions(
            name='answer',
            options={'ordering': ['question', 'order'], 'verbose_name': 'Answer', 'verbose_name_plural': 'Answers'},
        ),
        migrations.AlterModelOptions(
            name='attemptanswer',
            options={'ordering': ['answered_at'], 'verbose_name': 'Attempt Answer', 'verbose_name_plural': 'Attempt Answers'},
        ),
        migrations.AlterModelOptions(
            name='lesson',
            options={'ordering': ['module', 'order'], 'verbose_name': 'Lesson', 'verbose_name_plural': 'Lessons'},
        ),
        migrations.AlterModelOptions(
            name='module',
            options={'ordering': ['course', 'order'], 'verbose_name': 'Module', 'verbose_name_plural': 'Modules'},
        ),
        migrations.AlterModelOptions(
            name='progress',
            options={'ordering': ['-last_accessed'], 'verbose_name': 'Progress', 'verbose_name_plural': 'Progress Records'},
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ['assessment', 'order'], 'verbose_name': 'Question', 'verbose_name_plural': 'Questions'},
        ),
        migrations.AlterModelOptions(
            name='resource',
            options={'ordering': ['lesson', 'order'], 'verbose_name': 'Resource', 'verbose_name_plural': 'Resources'},
        ),
        migrations.AlterUniqueTogether(
            name='attemptanswer',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='progress',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='course',
            name='duration',
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent category for hierarchy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='courses.category'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='enrolled_date',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, help_text='Date when student enrolled'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='course',
            name='avg_rating',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average rating from reviews (decimal precision)', max_digits=3),
        ),
        migrations.AlterField(
            model_name='course',
            name='completion_status',
            field=models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('partially_complete', 'Partially Complete'), ('complete', 'Complete'), ('published', 'Published'), ('archived', 'Archived'), ('suspended', 'Suspended')], default='not_started', help_text='Course completion status', max_length=20),
        ),
        migrations.AlterField(
            model_name='course',
            name='creation_method',
            field=models.CharField(choices=[('builder', 'Drag & Drop Builder'), ('wizard', 'Step-by-Step Wizard'), ('ai', 'AI-Powered Builder'), ('import', 'Imported Course'), ('manual', 'Manual Creation'), ('template', 'From Template')], default='builder', help_text='Method used to create course', max_length=20),
        ),
        migrations.AlterField(
            model_name='course',
            name='discount_price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Discounted price (optional, decimal precision)', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), courses.validators.validate_price_range]),
        ),
        migrations.AlterField(
            model_name='course',
            name='price',
            field=models.DecimalField(decimal_places=2, default=Decimal('49.99'), help_text='Course price (decimal precision)', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0')), courses.validators.validate_price_range]),
        ),
        migrations.AlterField(
            model_name='course',
            name='version',
            field=models.DecimalField(decimal_places=1, default=Decimal('1.0'), help_text='Course version number (decimal precision)', max_digits=4),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('suspended', 'Suspended'), ('unenrolled', 'Unenrolled'), ('expired', 'Expired'), ('pending', 'Pending')], default='active', help_text='Enrollment status', max_length=20),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='access_level',
            field=models.CharField(choices=[('guest', 'Guest - Unregistered Users'), ('registered', 'Registered - Logged In Users'), ('premium', 'Premium - Paid Subscribers'), ('enterprise', 'Enterprise - Corporate Users')], default='registered', help_text='Minimum access level required to view this lesson', max_length=20),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='type',
            field=models.CharField(choices=[('video', 'Video'), ('reading', 'Reading'), ('interactive', 'Interactive'), ('quiz', 'Quiz'), ('lab_exercise', 'Lab Exercise'), ('assignment', 'Assignment'), ('discussion', 'Discussion'), ('live_session', 'Live Session'), ('download', 'Download')], default='video', help_text='Type of lesson content', max_length=20),
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('matching', 'Matching'), ('fill_blank', 'Fill in the Blank'), ('drag_drop', 'Drag and Drop'), ('ordering', 'Ordering')], help_text='Type of question', max_length=20),
        ),
        migrations.AlterField(
            model_name='resource',
            name='type',
            field=models.CharField(choices=[('document', 'Document'), ('video', 'Video'), ('audio', 'Audio'), ('image', 'Image'), ('link', 'External Link'), ('code_sample', 'Code Sample'), ('tool_software', 'Tool/Software'), ('dataset', 'Dataset'), ('template', 'Template'), ('archive', 'Archive/Zip')], help_text='Type of resource', max_length=20),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='courses_cat_parent__abacdd_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['price'], name='courses_cou_price_1fbd18_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['avg_rating'], name='courses_cou_avg_rat_82cd8e_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['enrolled_date'], name='courses_enr_enrolle_17cda0_idx'),
        ),
        migrations.AddConstraint(
            model_name='answer',
            constraint=models.UniqueConstraint(fields=('question', 'order'), name='unique_answer_order'),
        ),
        migrations.AddConstraint(
            model_name='attemptanswer',
            constraint=models.UniqueConstraint(fields=('attempt', 'question'), name='unique_attempt_answer'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_category_slug'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.CheckConstraint(condition=models.Q(('sort_order__gte', 0)), name='category_sort_order_positive'),
        ),
        migrations.AddConstraint(
            model_name='certificate',
            constraint=models.UniqueConstraint(fields=('certificate_number',), name='unique_certificate_number'),
        ),
        migrations.AddConstraint(
            model_name='certificate',
            constraint=models.UniqueConstraint(fields=('verification_hash',), name='unique_verification_hash'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_course_slug'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='course_price_positive'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('discount_price__gte', 0)), name='course_discount_price_positive'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('version__gt', 0)), name='course_version_positive'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(condition=models.Q(('discount_price__isnull', True), ('discount_price__lt', models.F('price')), _connector='OR'), name='course_discount_less_than_price'),
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'unenrolled'), _negated=True), fields=('user', 'course'), name='unique_active_enrollment'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('module', 'order'), name='unique_lesson_order'),
        ),
        migrations.AddConstraint(
            model_name='module',
            constraint=models.UniqueConstraint(fields=('course', 'order'), name='unique_module_order'),
        ),
        migrations.AddConstraint(
            model_name='progress',
            constraint=models.UniqueConstraint(fields=('enrollment', 'lesson'), name='unique_progress_record'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('assessment', 'order'), name='unique_question_order'),
        ),
        migrations.AddConstraint(
            model_name='resource',
            constraint=models.UniqueConstraint(fields=('lesson', 'order'), name='unique_resource_order'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='unique_user_course_review'),
        ),
        migrations.AddField(
            model_name='courseprogress',
            name='course',
            field=models.ForeignKey(help_text='Associated course', on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.course'),
        ),
        migrations.AddField(
            model_name='courseprogress',
            name='current_lesson',
            field=models.ForeignKey(blank=True, help_text='The lesson the user is currently on', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_for_users', to='courses.lesson'),
        ),
        migrations.AddField(
            model_name='courseprogress',
            name='user',
            field=models.ForeignKey(help_text='Student user', on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='CourseInstructor',
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['created_date'], name='courses_cou_created_6c9322_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['updated_date'], name='courses_cou_updated_2dc6a5_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['user', 'course'], name='courses_cou_user_id_06f975_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['course', 'completion_percentage'], name='courses_cou_course__4ab7f3_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['user', 'last_accessed'], name='courses_cou_user_id_d1c82f_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['completion_percentage'], name='courses_cou_complet_96dc1c_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['completed_at'], name='courses_cou_complet_977240_idx'),
        ),
        migrations.AddIndex(
            model_name='courseprogress',
            index=models.Index(fields=['study_streak_days'], name='courses_cou_study_s_9cf964_idx'),
        ),
        migrations.AddConstraint(
            model_name='courseprogress',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='unique_course_progress'),
        ),
        migrations.AddConstraint(
            model_name='courseprogress',
            constraint=models.CheckConstraint(condition=models.Q(('completion_percentage__gte', 0), ('completion_percentage__lte', 100)), name='course_progress_percentage_range'),
        ),
        migrations.AddConstraint(
            model_name='courseprogress',
            constraint=models.CheckConstraint(condition=models.Q(('lessons_completed__gte', 0)), name='course_progress_lessons_completed_positive'),
        ),
        migrations.AddConstraint(
            model_name='courseprogress',
            constraint=models.CheckConstraint(condition=models.Q(('assessments_passed__gte', 0)), name='course_progress_assessments_passed_positive'),
        ),
        migrations.AddConstraint(
            model_name='courseprogress',
            constraint=models.CheckConstraint(condition=models.Q(('study_streak_days__gte', 0)), name='course_progress_study_streak_positive'),
        ),
    ]
